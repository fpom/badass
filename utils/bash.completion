#!/usr/bin/env bash
# AUTOMATCALLY GENERATED by `shtab`

_shtab_badass_options_='-h --help -o --output -l --log --lang --db --record -b --base'
_shtab_badass_commands_='compare cparse has p5 patch report run xpath'

_shtab_badass_compare='-h --help -g --glob --csv --heatmap --hmopt --maxsize --absolute --load'
_shtab_badass_cparse='-h --help -i --input'
_shtab_badass_has='-h --help'
_shtab_badass_p5='-h --help -I -m --marker -l --let -s --save -n --nocpp'
_shtab_badass_patch='-h --help'
_shtab_badass_report='-h --help'
_shtab_badass_run='-h --help -t --timeout --out --err --ret --sys -a --add -r --replace'
_shtab_badass_xpath='-h --help -s --source -x --xml -c --count'


# $1=COMP_WORDS[1]
_shtab_compgen_files() {
  compgen -f -- $1  # files
  compgen -d -S '/' -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_compgen_dirs() {
  compgen -d -S '/' -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_replace_hyphen() {
  echo $1 | sed 's/-/_/g'
}

# $1=COMP_WORDS[1]
_shtab_badass_compgen_root_() {
  local args_gen="_shtab_badass_COMPGEN"
  case "$word" in
    -*) COMPREPLY=( $(compgen -W "$_shtab_badass_options_" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") ) ;;
    *) COMPREPLY=( $(compgen -W "$_shtab_badass_commands_" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") ) ;;
  esac
}

# $1=COMP_WORDS[1]
_shtab_badass_compgen_command_() {
  local flags_list="_shtab_badass_$(_shtab_replace_hyphen $1)"
  local args_gen="${flags_list}_COMPGEN"
  COMPREPLY=( $(compgen -W "${!flags_list}" -- "$word"; [ -n "${!args_gen}" ] && ${!args_gen} "$word") )
}

# $1=COMP_WORDS[1]
# $2=COMP_WORDS[2]
_shtab_badass_compgen_subcommand_() {
  local flags_list="_shtab_badass_$(_shtab_replace_hyphen $1)_$(_shtab_replace_hyphen $2)"
  local args_gen="${flags_list}_COMPGEN"
  [ -n "${!args_gen}" ] && local opts_more="$(${!args_gen} "$word")"
  local opts="${!flags_list}"
  if [ -z "$opts$opts_more" ]; then
    _shtab_badass_compgen_command_ $1
  else
    COMPREPLY=( $(compgen -W "$opts" -- "$word"; [ -n "$opts_more" ] && echo "$opts_more") )
  fi
}

# Notes:
# `COMPREPLY` contains what will be rendered after completion is triggered
# `word` refers to the current typed word
# `${!var}` is to evaluate the content of `var`
# and expand its content as a variable
#       hello="world"
#       x="hello"
#       ${!x} ->  ${hello} ->  "world"
_shtab_badass() {
  local word="${COMP_WORDS[COMP_CWORD]}"

  COMPREPLY=()

  if [ "${COMP_CWORD}" -eq 1 ]; then
    _shtab_badass_compgen_root_ ${COMP_WORDS[1]}
  elif [ "${COMP_CWORD}" -eq 2 ]; then
    _shtab_badass_compgen_command_ ${COMP_WORDS[1]}
  elif [ "${COMP_CWORD}" -ge 3 ]; then
    _shtab_badass_compgen_subcommand_ ${COMP_WORDS[1]} ${COMP_WORDS[2]}
  fi

  return 0
}

complete -o nospace -F _shtab_badass badass
